(executable
 (public_name thir-elab)
 (name main)
 (libraries thir_elab core pprint)
 (preprocess
  (pps ppx_matches ppx_functor_application ppx_yojson_conv ppx_deriving.show ppx_compare ppx_sexp_conv ppx_hash ppx_deriving.eq)))

(rule
 (target cli_types.ml)
 (deps (:ocaml_of_json_schema ../ocaml_of_json_schema.js))
 (action
  (with-stdout-to
   cli_types.ml
   (pipe-stdout
        (run thir-export-json-schema cli -)
        (run node %{ocaml_of_json_schema} - -)
   ))))

(env
 (dev
  (flags
   (:standard -warn-error -A))))
