---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: fstar
  info:
    name: cyclic-modules
    manifest: cyclic-modules/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Cyclic_modules.B.fst" = '''
module Cyclic_modules.B
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Cyclic_bundle_367033742 {g as g}
'''
"Cyclic_modules.C.fst" = '''
module Cyclic_modules.C
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let i (_: Prims.unit) : Prims.unit = ()
'''
"Cyclic_modules.Cyclic_bundle_367033742.fst" = '''
module Cyclic_modules.Cyclic_bundle_367033742
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let f (_: Prims.unit) : Prims.unit = ()

let g (_: Prims.unit) : Prims.unit = f ()

let h (_: Prims.unit) : Prims.unit =
  let _:Prims.unit = g () in
  Cyclic_modules.C.i ()

let h2 (_: Prims.unit) : Prims.unit = Cyclic_modules.C.i ()
'''
"Cyclic_modules.D.Cyclic_bundle_81544935.fst" = '''
module Cyclic_modules.D.Cyclic_bundle_81544935
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let d1 (_: Prims.unit) : Prims.unit = ()

let e1 (_: Prims.unit) : Prims.unit = d1 ()

let de1 (_: Prims.unit) : Prims.unit = e1 ()

let d2 (_: Prims.unit) : Prims.unit = de1 ()
'''
"Cyclic_modules.D.fst" = '''
module Cyclic_modules.D
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.D.Cyclic_bundle_81544935 {d1 as d1}

include Cyclic_modules.D.Cyclic_bundle_81544935 {d2 as d2}
'''
"Cyclic_modules.De.fst" = '''
module Cyclic_modules.De
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.D.Cyclic_bundle_81544935 {de1 as de1}
'''
"Cyclic_modules.Disjoint_cycle_a.Cyclic_bundle_177270903.fst" = '''
module Cyclic_modules.Disjoint_cycle_a.Cyclic_bundle_177270903
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let g (_: Prims.unit) : Prims.unit = ()

let h (_: Prims.unit) : Prims.unit = ()

let f (_: Prims.unit) : Prims.unit = h ()

let i (_: Prims.unit) : Prims.unit = g ()
'''
"Cyclic_modules.Disjoint_cycle_a.fst" = '''
module Cyclic_modules.Disjoint_cycle_a
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Disjoint_cycle_a.Cyclic_bundle_177270903 {f as f}

include Cyclic_modules.Disjoint_cycle_a.Cyclic_bundle_177270903 {g as g}
'''
"Cyclic_modules.Disjoint_cycle_b.fst" = '''
module Cyclic_modules.Disjoint_cycle_b
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Disjoint_cycle_a.Cyclic_bundle_177270903 {h as h}

include Cyclic_modules.Disjoint_cycle_a.Cyclic_bundle_177270903 {i as i}
'''
"Cyclic_modules.E.fst" = '''
module Cyclic_modules.E
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.D.Cyclic_bundle_81544935 {e1 as e1}
'''
"Cyclic_modules.Enums_a.Cyclic_bundle_1009707801.fst" = '''
module Cyclic_modules.Enums_a.Cyclic_bundle_1009707801
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

type t_U =
  | U_A : t_U
  | U_B : t_U
  | U_C : Alloc.Vec.t_Vec t_T_240131830 Alloc.Alloc.t_Global -> t_U

and t_T_366415196 =
  | T_366415196_A : t_T_366415196
  | T_366415196_B : t_T_366415196
  | T_366415196_C : Alloc.Vec.t_Vec t_T_240131830 Alloc.Alloc.t_Global -> t_T_366415196

and t_T_240131830 =
  | T_240131830_A : t_T_240131830
  | T_240131830_B : t_T_240131830
  | T_240131830_C : Alloc.Vec.t_Vec t_U Alloc.Alloc.t_Global -> t_T_240131830
  | T_240131830_D : Alloc.Vec.t_Vec t_T_366415196 Alloc.Alloc.t_Global -> t_T_240131830

let f (_: Prims.unit) : t_T_366415196 = T_366415196_A <: t_T_366415196
'''
"Cyclic_modules.Enums_a.fst" = '''
module Cyclic_modules.Enums_a
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {t_T_240131830 as t_T}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_240131830_A as T_A}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_240131830_B as T_B}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_240131830_C as T_C}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_240131830_D as T_D}
'''
"Cyclic_modules.Enums_b.fst" = '''
module Cyclic_modules.Enums_b
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {t_U as t_U}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {U_A as U_A}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {U_B as U_B}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {U_C as U_C}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {t_T_366415196 as t_T}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_366415196_A as T_A}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_366415196_B as T_B}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {T_366415196_C as T_C}

include Cyclic_modules.Enums_a.Cyclic_bundle_1009707801 {f as f}
'''
"Cyclic_modules.Late_skip_a.Cyclic_bundle_658016071.fst" = '''
module Cyclic_modules.Late_skip_a.Cyclic_bundle_658016071
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let rec ff_749016415 (_: Prims.unit) : Prims.unit = ff_377825240 ()

and ff_377825240 (_: Prims.unit) : Prims.Pure Prims.unit (requires true) (fun _ -> Prims.l_True) =
  ff_749016415 ()
'''
"Cyclic_modules.Late_skip_a.fst" = '''
module Cyclic_modules.Late_skip_a
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Late_skip_a.Cyclic_bundle_658016071 {ff_749016415 as f}
'''
"Cyclic_modules.Late_skip_b.fst" = '''
module Cyclic_modules.Late_skip_b
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Late_skip_a.Cyclic_bundle_658016071 {ff_377825240 as f}
'''
"Cyclic_modules.M1.Cyclic_bundle_892895908.fst" = '''
module Cyclic_modules.M1.Cyclic_bundle_892895908
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let d (_: Prims.unit) : Prims.unit = ()

let c (_: Prims.unit) : Prims.unit = ()

let a (_: Prims.unit) : Prims.unit = c ()

let b (_: Prims.unit) : Prims.unit =
  let _:Prims.unit = a () in
  d ()
'''
"Cyclic_modules.M1.fst" = '''
module Cyclic_modules.M1
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.M1.Cyclic_bundle_892895908 {a as a}
'''
"Cyclic_modules.M2.fst" = '''
module Cyclic_modules.M2
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.M1.Cyclic_bundle_892895908 {d as d}

include Cyclic_modules.M1.Cyclic_bundle_892895908 {b as b}

include Cyclic_modules.M1.Cyclic_bundle_892895908 {c as c}
'''
"Cyclic_modules.Rec.fst" = '''
module Cyclic_modules.Rec
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

type t_T =
  | T_t1 : t_T
  | T_t2 : t_T

let t_T_cast_to_repr (x: t_T) : isize =
  match x <: t_T with
  | T_t1  -> isz 0
  | T_t2  -> isz 1

let rec hf (x: t_T) : t_T =
  match x <: t_T with
  | T_t1  -> hf (T_t2 <: t_T)
  | T_t2  -> x

let rec g2 (x: t_T) : t_T =
  match x <: t_T with
  | T_t1  -> g1 x
  | T_t2  -> hf x

and g1 (x: t_T) : t_T =
  match x <: t_T with
  | T_t1  -> g2 x
  | T_t2  -> T_t1 <: t_T
'''
"Cyclic_modules.Rec1_same_name.Cyclic_bundle_563905053.fst" = '''
module Cyclic_modules.Rec1_same_name.Cyclic_bundle_563905053
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let rec ff_533409751 (x: i32) : i32 = ff_91805216 x

and ff_91805216 (x: i32) : i32 = if x >. 0l then ff_533409751 (x -! 1l <: i32) else 0l
'''
"Cyclic_modules.Rec1_same_name.fst" = '''
module Cyclic_modules.Rec1_same_name
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Rec1_same_name.Cyclic_bundle_563905053 {ff_533409751 as f}
'''
"Cyclic_modules.Rec2_same_name.fst" = '''
module Cyclic_modules.Rec2_same_name
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Rec1_same_name.Cyclic_bundle_563905053 {ff_91805216 as f}
'''
"Cyclic_modules.Typ_a.Cyclic_bundle_830459646.fst" = '''
module Cyclic_modules.Typ_a.Cyclic_bundle_830459646
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

type t_T1 = | T1_T1 : t_T1

type t_T = | T_T : t_T1 -> t_T

let t_T1_cast_to_repr (x: t_T1) : isize = match x <: t_T1 with | T1_T1  -> isz 0

type t_T2 = | T2_T2 : t_T -> t_T2

type t_TRec =
  | TRec_T : t_T1Rec -> t_TRec
  | TRec_Empty : t_TRec

and t_T2Rec = | T2Rec_T2 : t_TRec -> t_T2Rec

and t_T1Rec = | T1Rec_T1 : Alloc.Boxed.t_Box t_T2Rec Alloc.Alloc.t_Global -> t_T1Rec
'''
"Cyclic_modules.Typ_a.fst" = '''
module Cyclic_modules.Typ_a
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_TRec as t_TRec}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {TRec_T as TRec_T}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {TRec_Empty as TRec_Empty}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_T as t_T}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {T_T as T_T}
'''
"Cyclic_modules.Typ_b.fst" = '''
module Cyclic_modules.Typ_b
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_T1Rec as t_T1Rec}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {T1Rec_T1 as T1Rec_T1}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_T2Rec as t_T2Rec}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {T2Rec_T2 as T2Rec_T2}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_T1_cast_to_repr as t_T1_cast_to_repr}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_T1 as t_T1}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {T1_T1 as T1_T1}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {t_T2 as t_T2}

include Cyclic_modules.Typ_a.Cyclic_bundle_830459646 {T2_T2 as T2_T2}
'''
"Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522.fst" = '''
module Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

type t_Context =
  | Context_A : i32 -> t_Context
  | Context_B : i32 -> t_Context

let test (x: Core.Option.t_Option i32) : Core.Option.t_Option t_Context =
  Core.Option.impl__map #i32 #t_Context x Context_A

let h (_: Prims.unit) : t_Context = Context_A 1l <: t_Context

let f (_: Prims.unit) : t_Context = h ()
'''
"Cyclic_modules.Variant_constructor_a.fst" = '''
module Cyclic_modules.Variant_constructor_a
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522 {t_Context as t_Context}

include Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522 {Context_A as Context_A}

include Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522 {Context_B as Context_B}

include Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522 {f as f}

include Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522 {test as impl__Context__test}
'''
"Cyclic_modules.Variant_constructor_b.fst" = '''
module Cyclic_modules.Variant_constructor_b
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Variant_constructor_a.Cyclic_bundle_748213522 {h as h}
'''
"Cyclic_modules.fst" = '''
module Cyclic_modules
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

include Cyclic_modules.Cyclic_bundle_367033742 {f as f}

include Cyclic_modules.Cyclic_bundle_367033742 {h as h}

include Cyclic_modules.Cyclic_bundle_367033742 {h2 as h2}
'''
